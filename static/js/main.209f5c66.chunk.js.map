{"version":3,"sources":["components/Contador.js","components/Comentarios.jsx","components/Jsx.js","components/Form.js","components/PracticaUno.js","components/Saludo.jsx","components/Avatar.jsx","components/ComentarioInterfaz.jsx","components/Comentario.jsx","components/FormHook.js","components/We.jsx","components/User.jsx","components/firebase.js","components/FireReact.jsx","App.js","reportWebVitals.js","index.js"],"names":["Contador","useState","numero","setNumero","onClick","console","log","Comentarios","Jsx","aumento","setAumento","className","map","item","index","Form","name","firstName","datos","setDatos","handleInputChange","event","target","value","onSubmit","preventDefault","type","onChange","placeholder","PracticaUno","useForm","register","errors","handleSubmit","Entradas","setEntradas","data","e","reset","ref","required","message","minLength","title","description","priority","min","max","age","entrada","Saludo","props","persona","active","Avatar","urlImage","src","alt","ComentarioInterfaz","sujetoName","Comentario","sujeto","text","FormHook","htmlFor","Description","testing","We","team","setTeam","useEffect","getData","a","fetch","json","users","civilizations","user","to","id","expansion","User","useParams","civilization","setCivilization","error","army_type","team_bonus","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","FireReact","tasks","setTasks","task","setTask","editionMode","setEditionMode","setId","collection","get","arrayData","docs","doc","addTask","trim","newTask","createdAt","Date","now","add","deleteTask","delete","filterArray","filter","updateTask","update","activateEdition","App","activeClassName","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.209f5c66.chunk.js","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\n\r\nconst Contador = () => {\r\n  // Logic JS\r\n  const [numero, setNumero] = useState(0);\r\n  const name = \"billy\";\r\n  const aumentar = () => {\r\n    console.log(\"Clicked!\");\r\n    setNumero(numero + 1); // la var 'numero' aumentara de 1 en 1\r\n  };\r\n  return (\r\n    // Para leer algo de JS, se usa interpolación\r\n    <Fragment>\r\n      <h3>\r\n        Contador: {numero} {name}\r\n      </h3>\r\n      <button onClick={aumentar}>Aumenta +1</button>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contador;\r\n","import React, { Fragment } from \"react\";\r\n\r\nconst Comentarios = () => {\r\n  // Datos recibidos de App.js (props)\r\n  return (\r\n    <Fragment>\r\n      <h2>Comentarios</h2>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Comentarios;\r\n","import React, { useState, Fragment } from \"react\";\r\n\r\nfunction Jsx() {\r\n  // numero = [0,1,2,3,4,5], setNumero es el modificador\r\n  const [numero, setNumero] = useState([0, 1, 2, 3, 4, 5]);\r\n\r\n  // aumento = 5, setAumento es el modificador\r\n  const [aumento, setAumento] = useState(6);\r\n\r\n  // Agregar un nuevo elemento (lista)\r\n  const addElement = () => {\r\n    setAumento(aumento + 1); // El modificador aumenta en 1\r\n    setNumero([...numero, aumento]); // El otro modificador mostrara los datos por defecto mas el aumento (1 en 1)\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h5>List count ++ </h5>\r\n\r\n      <button className=\"btn btn-dark btn-sm\" onClick={addElement}>\r\n        {\" \"}\r\n        Add a list\r\n      </button>\r\n      <ul>\r\n        {numero.map((item, index) => (\r\n          <li key={index}>\r\n            {index} - {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Jsx;\r\n","import React, { useState, Fragment } from \"react\";\r\nfunction Form() {\r\n  const [datos, setDatos] = useState({\r\n    name: \"\",\r\n    firstName: \"\",\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    console.log(event.target.value); // Escuchador de typeo en el input\r\n    setDatos({\r\n      // Copia de name y firstName\r\n      ...datos,\r\n      [event.target.name]: event.target.value, // Se concatena el valor de name y firstName con el valor de cada input del form (name es su propiedad)\r\n    });\r\n  };\r\n\r\n  const enviarDatos = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"data sent\");\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <form className=\"row\" onSubmit={enviarDatos}>\r\n        <div className=\"col-md-3\">\r\n          <input\r\n            type=\"text\"\r\n            onChange={handleInputChange}\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <input\r\n            type=\"text\"\r\n            onChange={handleInputChange}\r\n            name=\"firstName\"\r\n            placeholder=\"First name\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <button className=\"btn btn-primary\" type=\"submit\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <h3>\r\n        {datos.name} - {datos.firstName}\r\n      </h3>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\"; // Modulo para validar formularios\r\n\r\nconst PracticaUno = () => {\r\n  // JS Code\r\n\r\n  // Constantes para inicializar form (libreria para usar forms)\r\n  const { register, errors, handleSubmit } = useForm();\r\n\r\n  const [Entradas, setEntradas] = useState([]); // State que inicializa VACIO\r\n\r\n  const onSubmit = (data, e) => {\r\n    // Captura los datos del input, a través de 'ref'\r\n    console.log(data);\r\n\r\n    setEntradas([\r\n      // Usamos setEntradas (modificador del state), usandolo como función\r\n      ...Entradas, // copiar entradas y empujar la data (datos del form)\r\n      data,\r\n    ]); // Finalmente en Entradas se agrega la data del usuario\r\n    // Limpiar campos del formulario una vez enviado\r\n    e.target.reset();\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1>App</h1>\r\n      {/* Creación del formulario */}\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <input\r\n          name=\"title\"\r\n          ref={register({\r\n            // Objeto para referenciar los datos ingresados (obtenerlos al dar submit)\r\n            required: { value: true, message: \"Must type a title\" }, // Reglas requeridas\r\n            minLength: { value: 2, message: \"At least 2 characters\" },\r\n          })}\r\n          placeholder=\"Add a title\"\r\n          className=\"form-control my-2\"\r\n        ></input>\r\n\r\n        {/* Validación, si hay un error en title, muestra un mensaje de error (el spam) */}\r\n        {errors.title && ( // Si el input con nombre titulo tiene algun error en sus validaciones, muestra el mensaje (despuest de los '&&')\r\n          <span className=\"text-danger text-small d-block mb-2\">\r\n            {errors.title.message}\r\n            {/* Mensaje PERSONALIZADO de que se require typear un titulo y longitud minima de caracteres */}\r\n          </span>\r\n        )}\r\n        <input\r\n          name=\"description\"\r\n          ref={register({\r\n            required: { value: true, message: \"Must type a description\" },\r\n          })}\r\n          placeholder=\"Add a description\"\r\n          className=\"form-control my-2\"\r\n        ></input>\r\n        {errors.description && (\r\n          <span className=\"text-danger text-small d-block mb-2\">\r\n            {errors.description.message}\r\n          </span>\r\n        )}\r\n        <input\r\n          name=\"priority\"\r\n          ref={register({\r\n            required: {\r\n              value: true,\r\n              message: \"Must type a priority (low/medium/high)\",\r\n            },\r\n          })}\r\n          placeholder=\"low/medium/high - priority\"\r\n          className=\"form-control my-2\"\r\n        ></input>\r\n        {errors.priority && (\r\n          <span className=\"text-danger text-small d-block mb-2\">\r\n            {errors.priority.message}\r\n          </span>\r\n        )}\r\n\r\n        <input\r\n          name=\"age\"\r\n          type=\"number\"\r\n          ref={register({\r\n            required: {\r\n              value: true,\r\n              min: 18,\r\n              max: 99,\r\n              message: \"Must type your age\",\r\n            },\r\n          })}\r\n          placeholder=\"Age\"\r\n          className=\"form-control my-2\"\r\n        />\r\n        {errors.age && (\r\n          <span className=\"text-danger text-small d-block mb-2\">\r\n            {errors.age.message}\r\n          </span>\r\n        )}\r\n\r\n        <button className=\"btn btn-primary d-block\">Save</button>\r\n      </form>\r\n\r\n      {/* Pintar datos del formulario (test) */}\r\n      <ul>\r\n        {Entradas.map(\r\n          (\r\n            entrada,\r\n            index // Hace un mapeo de los datos guardados (Entradas)\r\n          ) => (\r\n            <li key={index}>\r\n              {entrada.title} - {entrada.description} - {entrada.priority} -{\" \"}\r\n              {entrada.age}\r\n            </li>\r\n          ) // No usamos llaves\r\n        )}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PracticaUno;\r\n","import React, { Fragment } from \"react\";\r\n\r\n// props recibidas de App.js\r\nconst Saludo = (props) => {\r\n  console.log(props); // Props es un objeto con propiedad 'persona'\r\n  return (\r\n    <Fragment>\r\n      <h2>\r\n        React JSX - {props.persona}, age = {props.age} - active ={\" \"}\r\n        {props.active ? \"ON\" : \"OFF\"}\r\n      </h2>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Saludo;\r\n","import React, { Fragment } from \"react\";\r\n\r\nconst Avatar = ({ urlImage }) => {\r\n  // Recibe un urlImage (es variable que colocara como src)\r\n  // Datos recibidos de App.js (props)\r\n  return (\r\n    <Fragment>\r\n      <img src={urlImage} alt=\"\" className=\"mr-3\" />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React, { Fragment } from \"react\";\r\n\r\nconst ComentarioInterfaz = ({ sujetoName }) => {\r\n  // Datos recibidos de App.js (props)\r\n  return (\r\n    <Fragment>\r\n      <h6>Comentario de : {sujetoName}</h6>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ComentarioInterfaz;\r\n","import React, { Fragment } from \"react\";\r\nimport Avatar from \"./Avatar\";\r\nimport ComentarioInterfaz from \"./ComentarioInterfaz\";\r\n// Recibiendo props de manera alternativa (nombre directo de la prop, en vez de 'props')\r\nconst Comentario = ({ sujeto }) => {\r\n  // Datos recibidos de App.js (props)\r\n  console.log(sujeto); // Props (sujeto) es un objeto con propiedad 'name', 'urlImage', 'text'.\r\n  return (\r\n    <Fragment>\r\n      {/* Enviar a través de props la propiedad name de sujeto al componente comentarioInterfaz*/}\r\n      <ComentarioInterfaz sujetoName={sujeto.name}></ComentarioInterfaz>\r\n      <hr />\r\n      <div className=\"media\">\r\n        {/* Llamamos a la propiedad urlImage de sujeto para usarlo como src. \r\n        <img src={sujeto.urlImage} alt=\"\" className=\"mr-3\" />*/}\r\n\r\n        {/* Enviamos a través de props la propiedad urlImage de sujeto al componente Avatar*/}\r\n        <Avatar urlImage={sujeto.urlImage}></Avatar>\r\n        <div className=\"media-body\">\r\n          <h5 className=\"mt-0\"> {sujeto.name}</h5>\r\n          {sujeto.text}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Comentario;\r\n","import React, { Fragment } from \"react\";\r\nimport { useForm } from \"react-hook-form\"; // Modulo para validar formularios\r\n\r\n// Declarando un JSX ()\r\nconst FormHook = () => {\r\n  // -----------Lógica JS------------\r\n  const { register, errors, handleSubmit } = useForm();\r\n  const onSubmit = (data, event) => {\r\n    console.log(data);\r\n    event.target.reset();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1> FormHook (Library)</h1>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label htmlFor=\"title\">title</label>\r\n        <input\r\n          name=\"title\"\r\n          className=\"form-control my-2\"\r\n          ref={register({\r\n            required: { value: true, message: \"Title required\" },\r\n          })}\r\n        />\r\n        <span className=\"text-danger text-small d-block mb-2\">\r\n          {errors?.title?.message}\r\n        </span>\r\n        <label htmlFor=\"Description\">Description</label>\r\n        <input\r\n          name=\"Description\"\r\n          className=\"form-control my-2\"\r\n          ref={register({\r\n            required: { value: true, message: \"Description required\" },\r\n          })}\r\n        />\r\n        <span className=\"text-danger text-small d-block mb-2\">\r\n          {errors?.Description?.message}\r\n        </span>\r\n        <label htmlFor=\"Priority\">Priority</label>\r\n        <input\r\n          name=\"priority\"\r\n          className=\"form-control my-2\"\r\n          ref={register({\r\n            required: { value: true, message: \"priority required\" },\r\n          })}\r\n        />\r\n        <span className=\"text-danger text-small d-block mb-2\">\r\n          {errors?.priority?.message}\r\n        </span>\r\n        <label htmlFor=\"testing\">testing</label>\r\n        <input\r\n          name=\"testing\"\r\n          className=\"form-control my-2\"\r\n          ref={register({\r\n            required: { value: true, message: \"testing required\" },\r\n          })}\r\n        />\r\n        <span className=\"text-danger text-small d-block mb-2\">\r\n          {errors?.testing?.message}\r\n        </span>\r\n        <button className=\"btn btn-primary mb-5\">Send Data</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FormHook;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst We = () => {\r\n  const [team, setTeam] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"using useEffect\");\r\n    getData();\r\n  }, []);\r\n\r\n  //getData() hace una petición fetch y el resultado lo guarda en el stage de team\r\n  const getData = async () => {\r\n    const data = await fetch(\r\n      \"https://age-of-empires-2-api.herokuapp.com/api/v1/civilizations\"\r\n    );\r\n    const users = await data.json(); // Transform data to JSON format\r\n    console.log(users.civilizations);\r\n    setTeam(users.civilizations);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>Age of Empires test (useEffect)</h4>\r\n      <hr />\r\n      <ul>\r\n        {team.map((user) => (\r\n          <li key={user.id}>\r\n            <Link to={`/we/${user.id}`}>\r\n              {/* 'Link' hace la función de un ancla */}\r\n              {user.name} - {user.expansion}\r\n              <hr />\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default We;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst User = () => {\r\n  // console.log(useParams()) // El params de la URL (Muestra id en un objecto)\r\n  const { id } = useParams(); // Destructuración de objetos\r\n  console.log(id); // Ya no muestra el id dentro de un objecto.\r\n\r\n  // Crear state\r\n  const [civilization, setCivilization] = useState([]);\r\n\r\n  // Ejecutar fetch dentro de useEffect\r\n  useEffect(() => {\r\n    console.log(\"useEffect: getting data with fetch\");\r\n    // Petición fetch\r\n    //getData() hace una petición fetch y el resultado lo guarda en el stage de civilization\r\n    const getData = async () => {\r\n      try {\r\n        const data = await fetch(\r\n          `https://age-of-empires-2-api.herokuapp.com/api/v1/civilization/${id}` //id viene de useParams (URL)\r\n        );\r\n        const users = await data.json(); // Transform data to JSON format\r\n        console.log(users);\r\n        setCivilization(users);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    getData();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      Age of Empires | <b>{civilization.name}</b>\r\n      <h3>\r\n        <b>{civilization.army_type}</b>\r\n      </h3>\r\n      <p>{civilization.team_bonus}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","// Llamada a libreria de firebase y Firestore\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\n// Guardar la api Key que nos da firebase\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBytPxetZ_2r5atGtII-CfO_FBjX2oI558\",\r\n  authDomain: \"react-firestore-app-2.firebaseapp.com\",\r\n  projectId: \"react-firestore-app-2\",\r\n  storageBucket: \"react-firestore-app-2.appspot.com\",\r\n  messagingSenderId: \"856690743574\",\r\n  appId: \"1:856690743574:web:b89384ed7e8014b2571837\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport { firebase };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { firebase } from \"./firebase\"; // Acceder a la configuración de firebase (modulo)\r\nconst db = firebase.firestore(); // Inicia el llamado a firestore para realizar cualquier query\r\nconst FireReact = () => {\r\n  // Crear state para tasks\r\n  const [tasks, setTasks] = useState([]);\r\n  // Crear state para estado del formulario (relacionarlo)\r\n  const [task, setTask] = useState(\"\");\r\n  // State para cambiar el formulario de crear -editar\r\n  const [editionMode, setEditionMode] = useState(false);\r\n  const [id, setId] = useState(\"\");\r\n\r\n  // useEffect para capturar la data de direstore\r\n  useEffect(() => {\r\n    // Obtener data de Firestore\r\n    const getData = async () => {\r\n      try {\r\n        const data = await db.collection(\"tasks\").get(); // Captura todos los docs\r\n        // console.log(data.docs) // Muestra los datos provenientes de firestore (no legibles)\r\n        const arrayData = data.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        })); // Data legible, ya que solo leemos el id y la data\r\n        console.log(arrayData); // Devuelve un array con la data legible (la enviamos al state)\r\n        setTasks(arrayData); // Enviamos la data recibida al state tasks\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    getData(); // Ejecutar función\r\n  }, []);\r\n\r\n  const addTask = async (event) => {\r\n    event.preventDefault();\r\n    // Si no ha escrito algo marca error\r\n    if (!task.trim()) {\r\n      console.log(\"Must type a task\");\r\n      return;\r\n    }\r\n    try {\r\n      const newTask = { name: task, createdAt: Date.now() }; // Definir la data a guardar\r\n      const data = await db.collection(\"tasks\").add(newTask);\r\n      // Montamos la data recibida al state tasks (para que las muestre al usuario)\r\n      setTasks([...tasks, { ...newTask, id: data.id }]); // Capturamos el id aleatorio que firestore coloca por default\r\n      setTask(\"\"); // Limpiar el state\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    console.log(task);\r\n  };\r\n\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      await db.collection(\"tasks\").doc(id).delete(); // De la colección 'task's selecciona el documento con el id pasado y eliminalo\r\n      const filterArray = tasks.filter((item) => item.id !== id); // Filtra tasks, muestra el id de TODAS las tareas que sea diferente al id pasado (clickeado a eliminar)\r\n      setTasks(filterArray); // Montar el array filtrado al state para que se renderice automaticamente\r\n      console.log(\"task deleted\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // activeEdition() recibe la tarea mapeada.\r\n  const activateEdition = (task) => {\r\n    setEditionMode(true);\r\n    setTask(task.name); // Cambia el value del input (ya que en su propiedad tiene como value 'task')\r\n    setId(task.id); // Montamos en el state 'id' el id de la tarea clickeada a editar\r\n  };\r\n  // updateTask() evento al dar 'submit' en editar\r\n  const updateTask = async (event) => {\r\n    event.preventDefault();\r\n    // Si el input esta vacio (no se ha ejecutado su método .trim() (eliminar espacios), marca error)\r\n    if (!task.trim()) {\r\n      console.log(\"Need to fill this field\");\r\n      return;\r\n    }\r\n    try {\r\n      // El .doc(id) es montado al state de 'id' una vez se activa el modo edición\r\n      // .update() recibe un objecto con los campos a actualizar, no es necesario TODO el objeto\r\n      await db.collection(\"tasks\").doc(id).update({ name: task });\r\n      // Filtramos todas las tareas, el doc. que tenga el mismo id al que clickeamos 'edit' actualizara sus datos\r\n      const filterArray = tasks.map((item) =>\r\n        item.id === id\r\n          ? { id: item.id, createdAt: item.createdAt, name: task }\r\n          : item\r\n      );\r\n      setTasks(filterArray); // Montar en el state de tareas el array filtrado (actualizadó)\r\n      setEditionMode(false); // Remueve el modo edición del form\r\n      setTask(\"\"); // el input se formateara\r\n      setId(\"\"); // El id vacio ya que no hay operaciones\r\n      console.log(\"task updated!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Retorna una estructura HTML junto con los documentos capturados por firestore\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <ul className=\"list-group\">\r\n            {tasks.map((task) => (\r\n              <li className=\"list-group-item mb-2\" key={task.id}>\r\n                {task.name}\r\n                {/* .name es una propiedad del objeto/document de firestore, pero se encuentra dentro del objecto del state 'tasks' */}\r\n                <button\r\n                  className=\"btn btn-danger btn-sm d-flex float-right\"\r\n                  onClick={() => deleteTask(task.id)} // Al clickear le pasamos como argumento el id de la tarea (Por el .map)\r\n                >\r\n                  Delete\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning btn-sm d-flex float-right mr-3\"\r\n                  onClick={() => activateEdition(task)} // Activamos el form para editar, enviandole la tarea COMPLETA mapeada\r\n                >\r\n                  Edit\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        {/* En la otra columna se mostrara un Form */}\r\n        <div className=\"col-md-6\">\r\n          <h3> {editionMode ? \"Update task\" : \"Add new task\"}</h3>\r\n          <form onSubmit={editionMode ? updateTask : addTask}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Add New Task\"\r\n              className=\"form-control mb-2\"\r\n              // En cada cambio del input, el evento captura lo typeado y lo envia al state \"task\"\r\n              onChange={(event) => setTask(event.target.value)}\r\n              value={task} // El valor por defecto del input es la tarea\r\n            />\r\n            <button\r\n              className={\r\n                editionMode\r\n                  ? \"btn btn-warning btn-block\"\r\n                  : \" btn btn-dark btn-block\"\r\n              }\r\n              type=\"submit\"\r\n            >\r\n              {editionMode ? \"Save changes\" : \"Add task\"}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FireReact;\r\n","import Contador from \"./components/Contador\";\nimport Comentarios from \"./components/Comentarios\";\nimport Jsx from \"./components/Jsx\";\nimport Form from \"./components/Form\";\nimport PracticaUno from \"./components/PracticaUno\";\nimport Saludo from \"./components/Saludo\";\nimport Comentario from \"./components/Comentario\";\nimport FormHook from \"./components/FormHook\";\nimport We from \"./components/We\";\nimport User from \"./components/User\";\nimport FireReact from \"./components/FireReact\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink,\n} from \"react-router-dom\";\nfunction App() {\n  // Only JavaScript\n\n  // Object testing\n  const sujeto = [\n    {\n      name: \"User 1\",\n      urlImage: \"https://via.placeholder.com/64\",\n      text: \"Lorem ipsum dolor sit amet.\",\n    },\n    {\n      name: \"User 2\",\n      urlImage: \"https://via.placeholder.com/64\",\n      text: \"Lorem ipsum dolor sit amet12121212.\",\n    },\n  ];\n\n  return (\n    <Router>\n      {/* Router engloba todo el sitio */}\n      <div className=\"container mt-\">\n        <div className=\"navbar navbar-expand-lg navbar-light bg-light mr-auto\">\n          <h1 className=\"mainTittle\">\n            <Link to=\"/\">REACT-PRACTICES</Link>\n          </h1>\n          <div className=\"buttonNav\">\n            <div className=\"btn-group m-1\">\n              <NavLink\n                to=\"/form\"\n                className=\"btn btn-light\"\n                activeClassName=\"active\"\n              >\n                useState (Ex)\n              </NavLink>\n            </div>\n            <div className=\"btn-group m-1\">\n              <Link to=\"/saludo\" className=\"btn btn-light\">\n                Greetings\n              </Link>\n            </div>\n            <div className=\"btn-group m-1\">\n              <Link to=\"/practicauno\" className=\"btn btn-light\">\n                FormHook Validations\n              </Link>\n            </div>\n            <div className=\"btn-group m-1\">\n              <Link to=\"/contador\" className=\"btn btn-light\">\n                Counter ++\n              </Link>\n            </div>\n            <div className=\"btn-group m-1\">\n              <Link to=\"/jsx\" className=\"btn btn-light\">\n                Counter Lists ++\n              </Link>\n            </div>\n            <div className=\"btn-group m-1\">\n              <Link to=\"/comentarios\" className=\"btn btn-light\">\n                Comments\n              </Link>\n            </div>\n            <div className=\"btn-group m-1\">\n              <Link to=\"/we\" className=\"btn btn-light\">\n                AoE API\n              </Link>\n            </div>\n            <div className=\"btn-group m-1\">\n              <Link to=\"/firebase\" className=\"btn btn-light\">\n                Firebase-Project (CRUD)\n              </Link>\n            </div>\n          </div>\n        </div>\n        {/* NAVBAR END */}\n        <hr />\n        {/* Switch carga el contenido dinamico */}\n        <Switch>\n          {/* Route: funciona de lo mas especifico a lo mas general */}\n          <Route path=\"/form\">\n            {/* Route llamamos el contenido dinamico/componentes dada una URL*/}\n            <h4> React - Forms</h4>\n            <FormHook></FormHook>\n          </Route>\n          <Route path=\"/firebase\">\n            <h4>React - firebase Project (CRUD)</h4>\n            <FireReact></FireReact>\n          </Route>\n          <Route path=\"/we/:id\">\n            Civilizations\n            <User></User>\n          </Route>\n          <Route path=\"/saludo\">\n            <h4> React - Greetings (props intro)</h4>\n            <Saludo persona=\"name 1\" age={30} active={true} />\n            <Saludo persona=\"name 2\" age={18} active={false} />\n          </Route>\n          <Route path=\"/practicauno\">\n            <h4> React - practice 1 (FormHook Validations)</h4>\n            <PracticaUno></PracticaUno>\n          </Route>\n          <Route path=\"/contador\">\n            <h4> React - counter +1 (Ex)</h4>\n            <Contador></Contador>\n          </Route>\n          <Route path=\"/jsx\">\n            <h4> React - Counter List</h4>\n            <Jsx></Jsx>\n          </Route>\n          <Route path=\"/comentarios\">\n            <h4> React - comments using props</h4>\n            <Comentarios></Comentarios>\n            {sujeto.map((item, index) => (\n              <Comentario sujeto={item} key={index}></Comentario>\n            ))}\n          </Route>\n          <Route path=\"/we\">\n            <h4> React - Age of Empires API List</h4>\n            <We></We>\n          </Route>\n          <Route path=\"/\">\n            <h4>React - Index (useState intro)</h4>\n            <Form></Form>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}